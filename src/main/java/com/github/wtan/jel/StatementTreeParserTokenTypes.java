// $ANTLR 2.7.3: "statement.tree.g" -> "StatementTreeParser.java"$

package com.github.wtan.jel;

import java.util.List;
import java.util.ArrayList;

public interface StatementTreeParserTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int BLOCK = 4;
	int OBJBLOCK = 5;
	int SLIST = 6;
	int CTOR_DEF = 7;
	int METHOD_DEF = 8;
	int VARIABLE_DEF = 9;
	int INSTANCE_INIT = 10;
	int PARAMETERS = 11;
	int PARAMETER_DEF = 12;
	int LABELED_STAT = 13;
	int INDEX_OP = 14;
	int POST_INC = 15;
	int POST_DEC = 16;
	int METHOD_CALL = 17;
	int EXPR = 18;
	int UNARY_MINUS = 19;
	int UNARY_PLUS = 20;
	int CASE_GROUP = 21;
	int ELIST = 22;
	int FOR_INIT = 23;
	int FOR_CONDITION = 24;
	int FOR_ITERATOR = 25;
	int SUPER_CTOR_CALL = 26;
	int CTOR_CALL = 27;
	int IDENT = 28;
	int DOT = 29;
	int LCURLY = 30;
	int RCURLY = 31;
	int SEMI = 32;
	int LITERAL_if = 33;
	int LPAREN = 34;
	int RPAREN = 35;
	int LITERAL_else = 36;
	int LITERAL_for = 37;
	int LITERAL_while = 38;
	int LITERAL_do = 39;
	int LITERAL_break = 40;
	int LITERAL_continue = 41;
	int LITERAL_return = 42;
	int LITERAL_switch = 43;
	int LITERAL_case = 44;
	int LITERAL_default = 45;
	int COLON = 46;
	int COMMA = 47;
	int ASSIGN = 48;
	int PLUS_ASSIGN = 49;
	int MINUS_ASSIGN = 50;
	int STAR_ASSIGN = 51;
	int DIV_ASSIGN = 52;
	int MOD_ASSIGN = 53;
	int QUESTION = 54;
	int LOR = 55;
	int LAND = 56;
	int NOT_EQUAL = 57;
	int EQUAL = 58;
	int LT = 59;
	int GT = 60;
	int LE = 61;
	int GE = 62;
	int LITERAL_instanceof = 63;
	int PLUS = 64;
	int MINUS = 65;
	int STAR = 66;
	int DIV = 67;
	int MOD = 68;
	int INC = 69;
	int DEC = 70;
	int LNOT = 71;
	int LITERAL_class = 72;
	int LITERAL_true = 73;
	int LITERAL_false = 74;
	int LITERAL_null = 75;
	int LITERAL_new = 76;
	int NUM_INT = 77;
	int CHAR_LITERAL = 78;
	int STRING_LITERAL = 79;
	int NUM_FLOAT = 80;
	int NUM_LONG = 81;
	int NUM_DOUBLE = 82;
	int WS = 83;
	int SL_COMMENT = 84;
	int ML_COMMENT = 85;
	int ESC = 86;
	int HEX_DIGIT = 87;
	int VOCAB = 88;
	int EXPONENT = 89;
	int FLOAT_SUFFIX = 90;
	int EMPTY_STAT = 91;
}
