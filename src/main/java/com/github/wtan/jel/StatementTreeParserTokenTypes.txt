// $ANTLR 2.7.3: statement.tree.g -> StatementTreeParserTokenTypes.txt$
StatementTreeParser    // output token vocab name
BLOCK=4
OBJBLOCK=5
SLIST=6
CTOR_DEF=7
METHOD_DEF=8
VARIABLE_DEF=9
INSTANCE_INIT=10
PARAMETERS=11
PARAMETER_DEF=12
LABELED_STAT=13
INDEX_OP=14
POST_INC=15
POST_DEC=16
METHOD_CALL=17
EXPR=18
UNARY_MINUS=19
UNARY_PLUS=20
CASE_GROUP=21
ELIST=22
FOR_INIT=23
FOR_CONDITION=24
FOR_ITERATOR=25
SUPER_CTOR_CALL=26
CTOR_CALL=27
IDENT=28
DOT=29
LCURLY=30
RCURLY=31
SEMI=32
LITERAL_if="if"=33
LPAREN=34
RPAREN=35
LITERAL_else="else"=36
LITERAL_for="for"=37
LITERAL_while="while"=38
LITERAL_do="do"=39
LITERAL_break="break"=40
LITERAL_continue="continue"=41
LITERAL_return="return"=42
LITERAL_switch="switch"=43
LITERAL_case="case"=44
LITERAL_default="default"=45
COLON=46
COMMA=47
ASSIGN=48
PLUS_ASSIGN=49
MINUS_ASSIGN=50
STAR_ASSIGN=51
DIV_ASSIGN=52
MOD_ASSIGN=53
QUESTION=54
LOR=55
LAND=56
NOT_EQUAL=57
EQUAL=58
LT=59
GT=60
LE=61
GE=62
LITERAL_instanceof="instanceof"=63
PLUS=64
MINUS=65
STAR=66
DIV=67
MOD=68
INC=69
DEC=70
LNOT=71
LITERAL_class="class"=72
LITERAL_true="true"=73
LITERAL_false="false"=74
LITERAL_null="null"=75
LITERAL_new="new"=76
NUM_INT=77
CHAR_LITERAL=78
STRING_LITERAL=79
NUM_FLOAT=80
NUM_LONG=81
NUM_DOUBLE=82
WS=83
SL_COMMENT=84
ML_COMMENT=85
ESC=86
HEX_DIGIT=87
VOCAB=88
EXPONENT=89
FLOAT_SUFFIX=90
EMPTY_STAT=91
