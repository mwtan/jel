// $ANTLR 2.7.3: statement.tree.g -> StatementTreeParserTokenTypes.txt$
StatementTreeParser    // output token vocab name
BLOCK=4
OBJBLOCK=5
SLIST=6
CTOR_DEF=7
METHOD_DEF=8
VARIABLE_DEF=9
INSTANCE_INIT=10
PARAMETERS=11
PARAMETER_DEF=12
LABELED_STAT=13
INDEX_OP=14
POST_INC=15
POST_DEC=16
METHOD_CALL=17
EXPR=18
UNARY_MINUS=19
UNARY_PLUS=20
CASE_GROUP=21
ELIST=22
FOR_INIT=23
FOR_CONDITION=24
FOR_ITERATOR=25
SUPER_CTOR_CALL=26
CTOR_CALL=27
IDENT=28
DOT=29
LCURLY=30
RCURLY=31
SEMI=32
LITERAL_if="if"=33
LPAREN=34
RPAREN=35
LITERAL_else="else"=36
LITERAL_for="for"=37
LITERAL_while="while"=38
LITERAL_do="do"=39
LITERAL_break="break"=40
LITERAL_continue="continue"=41
LITERAL_return="return"=42
LITERAL_switch="switch"=43
LITERAL_case="case"=44
LITERAL_default="default"=45
COLON=46
COMMA=47
ASSIGN=48
PLUS_ASSIGN=49
MINUS_ASSIGN=50
STAR_ASSIGN=51
DIV_ASSIGN=52
MOD_ASSIGN=53
LOR=54
LAND=55
NOT_EQUAL=56
EQUAL=57
LT=58
GT=59
LE=60
GE=61
LITERAL_instanceof="instanceof"=62
PLUS=63
MINUS=64
STAR=65
DIV=66
MOD=67
INC=68
DEC=69
LNOT=70
LITERAL_class="class"=71
LITERAL_true="true"=72
LITERAL_false="false"=73
LITERAL_null="null"=74
LITERAL_new="new"=75
NUM_INT=76
CHAR_LITERAL=77
STRING_LITERAL=78
NUM_FLOAT=79
NUM_LONG=80
NUM_DOUBLE=81
WS=82
SL_COMMENT=83
ML_COMMENT=84
ESC=85
HEX_DIGIT=86
VOCAB=87
EXPONENT=88
FLOAT_SUFFIX=89
EMPTY_STAT=90
